buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()

        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7' 
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
    }
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'propdeps'
	apply plugin: 'propdeps-maven'
	apply plugin: 'propdeps-idea'
	apply plugin: 'propdeps-eclipse'
	repositories {
		mavenCentral()
	}
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}



project(':web') {
	apply plugin: 'java'
    apply plugin: 'spring-boot'
	apply plugin: 'eclipse'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
    apply plugin: 'com.moowork.node'

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-mustache'
        compile 'org.springframework.boot:spring-boot-starter-data-jpa'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        runtime 'org.springframework.boot:spring-boot-starter-tomcat'

        runtime 'com.h2database:h2'
        compile 'com.zaxxer:HikariCP:2.4.4'
        compile 'org.projectlombok:lombok:1.16.8'

        compile 'joda-time:joda-time:2.9.2'
        compile project(':common')
    }

    eclipse {
        classpath {
            containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
            containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
            defaultOutputDir = file("${buildDir}/classes/main")
        }
    }
	springBoot {
		mainClass = 'net.dsdstudio.WebApp'
	}
	bootRun {
		addResources = true
		systemProperties = System.properties
	}
    node {
        version = '6.6.0'
        distBaseUrl = 'https://nodejs.org/dist'
        download = true

		workDir = file("${projectDir}/nodejs")
		nodeModulesDir = file("${projectDir}/node_modules")
    }

	task sassCompile(type: NpmTask, dependsOn: 'npm_install') {
		args = ['run', 'sass:compile']
	}
	task sassWatchStart(type: NpmTask, dependsOn: 'npm_install') {
		args = ['run', 'sass:watch:start']
	}

	task sassWatchStop(type: NpmTask) {
		args = ['run', 'sass:watch:stop']
	}

	processResources.dependsOn sassCompile
	bootRun.dependsOn  sassCompile
}
project(':common') {
	apply plugin: 'java'
	apply plugin: 'eclipse'
    dependencies {
        compile 'org.springframework.data:spring-data-commons:1.11.4.RELEASE'
        compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
        compile 'com.querydsl:querydsl-apt:4.1.3:jpa'
        compile 'com.querydsl:querydsl-core:4.1.3'
        compile 'com.querydsl:querydsl-sql-spring:4.1.3'
    }

    eclipse {
        classpath {
            containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
            containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
            defaultOutputDir = file("${buildDir}/classes/main")
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}
