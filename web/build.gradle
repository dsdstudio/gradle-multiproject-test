apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'com.moowork.node'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

    runtime 'com.h2database:h2'
    compile 'com.zaxxer:HikariCP:2.5.1'
    compile 'org.projectlombok:lombok:1.16.8'

    compile 'joda-time:joda-time:2.9.2'
    compile project(':common')
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
        defaultOutputDir = file("${buildDir}/classes/main")
    }
}
springBoot {
    mainClass = 'net.dsdstudio.WebApp'
}
bootRun {
    addResources = true
    systemProperties = System.properties
}
node {
    version = '6.6.0'
    //npmVersion = '3.10.8'

    distBaseUrl = 'https://nodejs.org/dist'
    download = true

    workDir = file("${projectDir}/nodejs")
    nodeModulesDir = file("${projectDir}/node_modules")
}

task sassCompile(type: NpmTask, dependsOn: 'npm_install') {
    args = ['run', 'sass:compile']
}
task sassWatchStart(type: NpmTask, dependsOn: 'npm_install') {
    args = ['run', 'sass:watch:start']
}

task sassWatchStop(type: NpmTask) {
    args = ['run', 'sass:watch:stop']
}

processResources.dependsOn sassCompile
bootRun.dependsOn sassWatchStart
bootRun.finalizedBy sassWatchStop
